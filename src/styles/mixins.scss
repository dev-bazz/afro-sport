@use "./colors.scss" as *;
@use "./functions.scss" as *;
@use "./variables.scss" as *;

//  Utilities Mixins
@mixin flexSpaceBetween {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

@mixin containerL {
	max-width: calc(map-get($containers, "max-width") - 16px);
	padding-inline: px-to-rem(16px);

	margin-inline: auto;
}
@mixin flex {
	display: flex;
}

@mixin fontFamily {
	font-family: "Lato", sans-serif;
}
@mixin buttonBase {
	padding: px-to-rem(12px) px-to-rem(16px);
	border-radius: px-to-rem(8px);
	font-size: px-to-rem(14px);
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	transition: all 0.2s ease-in-out;
	@content;
	&:active {
		scale: 0.9;
	}
}

// Media Queries Mixins

@mixin custom-media-query($device-type, $width) {
	@if $device-type == "mobile" {
		@media (max-width: $width) {
			@content;
		}
	} @else if $device-type == "desktop" {
		@media (min-width: $width) {
			@content;
		}
	} @else {
		@warn 'Invalid argument for custom-media-query mixin. Please use mobile or desktop.';
	}
}



// Animation Mixins

@mixin animation(
	$name,
	$duration,
	$delay,
	$iteration-count,
	$direction,
	$timing-function,
	$fill-mode
) {
	animation-name: $name;
	animation-duration: $duration;
	animation-delay: $delay;
	animation-iteration-count: $iteration-count;
	animation-direction: $direction;
	animation-timing-function: $timing-function;
	animation-fill-mode: $fill-mode;
	-webkit-animation-name: $name;
	-webkit-animation-duration: $duration;
	-webkit-animation-delay: $delay;
	-webkit-animation-iteration-count: $iteration-count;
	-webkit-animation-direction: $direction;
	-webkit-animation-timing-function: $timing-function;
	-webkit-animation-fill-mode: $fill-mode;
}

//  Component Mixins

@mixin button($stroke: false) {
	@if $stroke {
		@include buttonBase {
			border: 1px solid #101010;
			background-color: map-get($colors, $key: "white");
		}
	} @else {
		@include buttonBase {
			background-color: map-get($colors, "black");
			color: map-get($colors, $key: "white");
		}
	}
}
